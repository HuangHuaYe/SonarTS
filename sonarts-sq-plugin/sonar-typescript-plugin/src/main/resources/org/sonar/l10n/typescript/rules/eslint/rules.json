[
  {
    "name": "accessor-pairs",
    "url": "https://eslint.org/docs/rules/accessor-pairs",
    "description": "enforce getter and setter pairs in objects"
  },
  {
    "name": "array-bracket-newline",
    "url": "https://eslint.org/docs/rules/array-bracket-newline",
    "description": "enforce linebreaks after opening and before closing array brackets"
  },
  {
    "name": "array-bracket-spacing",
    "url": "https://eslint.org/docs/rules/array-bracket-spacing",
    "description": "enforce consistent spacing inside array brackets"
  },
  {
    "name": "array-callback-return",
    "url": "https://eslint.org/docs/rules/array-callback-return",
    "description": "enforce `return` statements in callbacks of array methods"
  },
  {
    "name": "array-element-newline",
    "url": "https://eslint.org/docs/rules/array-element-newline",
    "description": "enforce line breaks after each array element"
  },
  {
    "name": "arrow-body-style",
    "url": "https://eslint.org/docs/rules/arrow-body-style",
    "description": "require braces around arrow function bodies"
  },
  {
    "name": "arrow-parens",
    "url": "https://eslint.org/docs/rules/arrow-parens",
    "description": "require parentheses around arrow function arguments"
  },
  {
    "name": "arrow-spacing",
    "url": "https://eslint.org/docs/rules/arrow-spacing",
    "description": "enforce consistent spacing before and after the arrow in arrow functions"
  },
  {
    "name": "block-scoped-var",
    "url": "https://eslint.org/docs/rules/block-scoped-var",
    "description": "enforce the use of variables within the scope they are defined"
  },
  {
    "name": "block-spacing",
    "url": "https://eslint.org/docs/rules/block-spacing",
    "description": "disallow or enforce spaces inside of blocks after opening block and before closing block"
  },
  {
    "name": "brace-style",
    "url": "https://eslint.org/docs/rules/brace-style",
    "description": "enforce consistent brace style for blocks"
  },
  {
    "name": "callback-return",
    "url": "https://eslint.org/docs/rules/callback-return",
    "description": "require `return` statements after callbacks"
  },
  {
    "name": "camelcase",
    "url": "https://eslint.org/docs/rules/camelcase",
    "description": "enforce camelcase naming convention"
  },
  {
    "name": "capitalized-comments",
    "url": "https://eslint.org/docs/rules/capitalized-comments",
    "description": "enforce or disallow capitalization of the first letter of a comment"
  },
  {
    "name": "class-methods-use-this",
    "url": "https://eslint.org/docs/rules/class-methods-use-this",
    "description": "enforce that class methods utilize `this`"
  },
  {
    "name": "comma-dangle",
    "url": "https://eslint.org/docs/rules/comma-dangle",
    "description": "require or disallow trailing commas"
  },
  {
    "name": "comma-spacing",
    "url": "https://eslint.org/docs/rules/comma-spacing",
    "description": "enforce consistent spacing before and after commas"
  },
  {
    "name": "comma-style",
    "url": "https://eslint.org/docs/rules/comma-style",
    "description": "enforce consistent comma style"
  },
  {
    "name": "complexity",
    "url": "https://eslint.org/docs/rules/complexity",
    "description": "enforce a maximum cyclomatic complexity allowed in a program"
  },
  {
    "name": "computed-property-spacing",
    "url": "https://eslint.org/docs/rules/computed-property-spacing",
    "description": "enforce consistent spacing inside computed property brackets"
  },
  {
    "name": "consistent-return",
    "url": "https://eslint.org/docs/rules/consistent-return",
    "description": "require `return` statements to either always or never specify values"
  },
  {
    "name": "consistent-this",
    "url": "https://eslint.org/docs/rules/consistent-this",
    "description": "enforce consistent naming when capturing the current execution context"
  },
  {
    "name": "constructor-super",
    "url": "https://eslint.org/docs/rules/constructor-super",
    "description": "require `super()` calls in constructors"
  },
  {
    "name": "curly",
    "url": "https://eslint.org/docs/rules/curly",
    "description": "enforce consistent brace style for all control statements"
  },
  {
    "name": "default-case",
    "url": "https://eslint.org/docs/rules/default-case",
    "description": "require `default` cases in `switch` statements"
  },
  {
    "name": "dot-location",
    "url": "https://eslint.org/docs/rules/dot-location",
    "description": "enforce consistent newlines before and after dots"
  },
  {
    "name": "dot-notation",
    "url": "https://eslint.org/docs/rules/dot-notation",
    "description": "enforce dot notation whenever possible"
  },
  {
    "name": "eol-last",
    "url": "https://eslint.org/docs/rules/eol-last",
    "description": "require or disallow newline at the end of files"
  },
  {
    "name": "eqeqeq",
    "url": "https://eslint.org/docs/rules/eqeqeq",
    "description": "require the use of `===` and `!==`"
  },
  {
    "name": "for-direction",
    "url": "https://eslint.org/docs/rules/for-direction",
    "description": "enforce \"for\" loop update clause moving the counter in the right direction."
  },
  {
    "name": "func-call-spacing",
    "url": "https://eslint.org/docs/rules/func-call-spacing",
    "description": "require or disallow spacing between function identifiers and their invocations"
  },
  {
    "name": "func-name-matching",
    "url": "https://eslint.org/docs/rules/func-name-matching",
    "description": "require function names to match the name of the variable or property to which they are assigned"
  },
  {
    "name": "func-names",
    "url": "https://eslint.org/docs/rules/func-names",
    "description": "require or disallow named `function` expressions"
  },
  {
    "name": "func-style",
    "url": "https://eslint.org/docs/rules/func-style",
    "description": "enforce the consistent use of either `function` declarations or expressions"
  },
  {
    "name": "function-paren-newline",
    "url": "https://eslint.org/docs/rules/function-paren-newline",
    "description": "enforce consistent line breaks inside function parentheses"
  },
  {
    "name": "generator-star-spacing",
    "url": "https://eslint.org/docs/rules/generator-star-spacing",
    "description": "enforce consistent spacing around `*` operators in generator functions"
  },
  {
    "name": "getter-return",
    "url": "https://eslint.org/docs/rules/getter-return",
    "description": "enforce `return` statements in getters"
  },
  {
    "name": "global-require",
    "url": "https://eslint.org/docs/rules/global-require",
    "description": "require `require()` calls to be placed at top-level module scope"
  },
  {
    "name": "guard-for-in",
    "url": "https://eslint.org/docs/rules/guard-for-in",
    "description": "require `for-in` loops to include an `if` statement"
  },
  {
    "name": "handle-callback-err",
    "url": "https://eslint.org/docs/rules/handle-callback-err",
    "description": "require error handling in callbacks"
  },
  {
    "name": "id-blacklist",
    "url": "https://eslint.org/docs/rules/id-blacklist",
    "description": "disallow specified identifiers"
  },
  {
    "name": "id-length",
    "url": "https://eslint.org/docs/rules/id-length",
    "description": "enforce minimum and maximum identifier lengths"
  },
  {
    "name": "id-match",
    "url": "https://eslint.org/docs/rules/id-match",
    "description": "require identifiers to match a specified regular expression"
  },
  {
    "name": "implicit-arrow-linebreak",
    "url": "https://eslint.org/docs/rules/implicit-arrow-linebreak",
    "description": "enforce the location of arrow function bodies"
  },
  {
    "name": "indent-legacy",
    "url": "https://eslint.org/docs/rules/indent-legacy",
    "description": "enforce consistent indentation"
  },
  {
    "name": "indent",
    "url": "https://eslint.org/docs/rules/indent",
    "description": "enforce consistent indentation"
  },
  {
    "name": "init-declarations",
    "url": "https://eslint.org/docs/rules/init-declarations",
    "description": "require or disallow initialization in variable declarations"
  },
  {
    "name": "jsx-quotes",
    "url": "https://eslint.org/docs/rules/jsx-quotes",
    "description": "enforce the consistent use of either double or single quotes in JSX attributes"
  },
  {
    "name": "key-spacing",
    "url": "https://eslint.org/docs/rules/key-spacing",
    "description": "enforce consistent spacing between keys and values in object literal properties"
  },
  {
    "name": "keyword-spacing",
    "url": "https://eslint.org/docs/rules/keyword-spacing",
    "description": "enforce consistent spacing before and after keywords"
  },
  {
    "name": "line-comment-position",
    "url": "https://eslint.org/docs/rules/line-comment-position",
    "description": "enforce position of line comments"
  },
  {
    "name": "linebreak-style",
    "url": "https://eslint.org/docs/rules/linebreak-style",
    "description": "enforce consistent linebreak style"
  },
  {
    "name": "lines-around-comment",
    "url": "https://eslint.org/docs/rules/lines-around-comment",
    "description": "require empty lines around comments"
  },
  {
    "name": "lines-around-directive",
    "url": "https://eslint.org/docs/rules/lines-around-directive",
    "description": "require or disallow newlines around directives"
  },
  {
    "name": "lines-between-class-members",
    "url": "https://eslint.org/docs/rules/lines-between-class-members",
    "description": "require or disallow an empty line between class members"
  },
  {
    "name": "max-depth",
    "url": "https://eslint.org/docs/rules/max-depth",
    "description": "enforce a maximum depth that blocks can be nested"
  },
  {
    "name": "max-len",
    "url": "https://eslint.org/docs/rules/max-len",
    "description": "enforce a maximum line length"
  },
  {
    "name": "max-lines",
    "url": "https://eslint.org/docs/rules/max-lines",
    "description": "enforce a maximum number of lines per file"
  },
  {
    "name": "max-nested-callbacks",
    "url": "https://eslint.org/docs/rules/max-nested-callbacks",
    "description": "enforce a maximum depth that callbacks can be nested"
  },
  {
    "name": "max-params",
    "url": "https://eslint.org/docs/rules/max-params",
    "description": "enforce a maximum number of parameters in function definitions"
  },
  {
    "name": "max-statements-per-line",
    "url": "https://eslint.org/docs/rules/max-statements-per-line",
    "description": "enforce a maximum number of statements allowed per line"
  },
  {
    "name": "max-statements",
    "url": "https://eslint.org/docs/rules/max-statements",
    "description": "enforce a maximum number of statements allowed in function blocks"
  },
  {
    "name": "multiline-comment-style",
    "url": "https://eslint.org/docs/rules/multiline-comment-style",
    "description": "enforce a particular style for multiline comments"
  },
  {
    "name": "multiline-ternary",
    "url": "https://eslint.org/docs/rules/multiline-ternary",
    "description": "enforce newlines between operands of ternary expressions"
  },
  {
    "name": "new-cap",
    "url": "https://eslint.org/docs/rules/new-cap",
    "description": "require constructor names to begin with a capital letter"
  },
  {
    "name": "new-parens",
    "url": "https://eslint.org/docs/rules/new-parens",
    "description": "require parentheses when invoking a constructor with no arguments"
  },
  {
    "name": "newline-after-var",
    "url": "https://eslint.org/docs/rules/newline-after-var",
    "description": "require or disallow an empty line after variable declarations"
  },
  {
    "name": "newline-before-return",
    "url": "https://eslint.org/docs/rules/newline-before-return",
    "description": "require an empty line before `return` statements"
  },
  {
    "name": "newline-per-chained-call",
    "url": "https://eslint.org/docs/rules/newline-per-chained-call",
    "description": "require a newline after each call in a method chain"
  },
  {
    "name": "no-alert",
    "url": "https://eslint.org/docs/rules/no-alert",
    "description": "disallow the use of `alert`, `confirm`, and `prompt`"
  },
  {
    "name": "no-array-constructor",
    "url": "https://eslint.org/docs/rules/no-array-constructor",
    "description": "disallow `Array` constructors"
  },
  {
    "name": "no-await-in-loop",
    "url": "https://eslint.org/docs/rules/no-await-in-loop",
    "description": "disallow `await` inside of loops"
  },
  {
    "name": "no-bitwise",
    "url": "https://eslint.org/docs/rules/no-bitwise",
    "description": "disallow bitwise operators"
  },
  {
    "name": "no-buffer-constructor",
    "url": "https://eslint.org/docs/rules/no-buffer-constructor",
    "description": "disallow use of the `Buffer()` constructor"
  },
  {
    "name": "no-caller",
    "url": "https://eslint.org/docs/rules/no-caller",
    "description": "disallow the use of `arguments.caller` or `arguments.callee`"
  },
  {
    "name": "no-case-declarations",
    "url": "https://eslint.org/docs/rules/no-case-declarations",
    "description": "disallow lexical declarations in case clauses"
  },
  {
    "name": "no-catch-shadow",
    "url": "https://eslint.org/docs/rules/no-catch-shadow",
    "description": "disallow `catch` clause parameters from shadowing variables in the outer scope"
  },
  {
    "name": "no-class-assign",
    "url": "https://eslint.org/docs/rules/no-class-assign",
    "description": "disallow reassigning class members"
  },
  {
    "name": "no-compare-neg-zero",
    "url": "https://eslint.org/docs/rules/no-compare-neg-zero",
    "description": "disallow comparing against -0"
  },
  {
    "name": "no-cond-assign",
    "url": "https://eslint.org/docs/rules/no-cond-assign",
    "description": "disallow assignment operators in conditional expressions"
  },
  {
    "name": "no-confusing-arrow",
    "url": "https://eslint.org/docs/rules/no-confusing-arrow",
    "description": "disallow arrow functions where they could be confused with comparisons"
  },
  {
    "name": "no-console",
    "url": "https://eslint.org/docs/rules/no-console",
    "description": "disallow the use of `console`"
  },
  {
    "name": "no-const-assign",
    "url": "https://eslint.org/docs/rules/no-const-assign",
    "description": "disallow reassigning `const` variables"
  },
  {
    "name": "no-constant-condition",
    "url": "https://eslint.org/docs/rules/no-constant-condition",
    "description": "disallow constant expressions in conditions"
  },
  {
    "name": "no-continue",
    "url": "https://eslint.org/docs/rules/no-continue",
    "description": "disallow `continue` statements"
  },
  {
    "name": "no-control-regex",
    "url": "https://eslint.org/docs/rules/no-control-regex",
    "description": "disallow control characters in regular expressions"
  },
  {
    "name": "no-debugger",
    "url": "https://eslint.org/docs/rules/no-debugger",
    "description": "disallow the use of `debugger`"
  },
  {
    "name": "no-delete-var",
    "url": "https://eslint.org/docs/rules/no-delete-var",
    "description": "disallow deleting variables"
  },
  {
    "name": "no-div-regex",
    "url": "https://eslint.org/docs/rules/no-div-regex",
    "description": "disallow division operators explicitly at the beginning of regular expressions"
  },
  {
    "name": "no-dupe-args",
    "url": "https://eslint.org/docs/rules/no-dupe-args",
    "description": "disallow duplicate arguments in `function` definitions"
  },
  {
    "name": "no-dupe-class-members",
    "url": "https://eslint.org/docs/rules/no-dupe-class-members",
    "description": "disallow duplicate class members"
  },
  {
    "name": "no-dupe-keys",
    "url": "https://eslint.org/docs/rules/no-dupe-keys",
    "description": "disallow duplicate keys in object literals"
  },
  {
    "name": "no-duplicate-case",
    "url": "https://eslint.org/docs/rules/no-duplicate-case",
    "description": "disallow duplicate case labels"
  },
  {
    "name": "no-duplicate-imports",
    "url": "https://eslint.org/docs/rules/no-duplicate-imports",
    "description": "disallow duplicate module imports"
  },
  {
    "name": "no-else-return",
    "url": "https://eslint.org/docs/rules/no-else-return",
    "description": "disallow `else` blocks after `return` statements in `if` statements"
  },
  {
    "name": "no-empty-character-class",
    "url": "https://eslint.org/docs/rules/no-empty-character-class",
    "description": "disallow empty character classes in regular expressions"
  },
  {
    "name": "no-empty-function",
    "url": "https://eslint.org/docs/rules/no-empty-function",
    "description": "disallow empty functions"
  },
  {
    "name": "no-empty-pattern",
    "url": "https://eslint.org/docs/rules/no-empty-pattern",
    "description": "disallow empty destructuring patterns"
  },
  {
    "name": "no-empty",
    "url": "https://eslint.org/docs/rules/no-empty",
    "description": "disallow empty block statements"
  },
  {
    "name": "no-eq-null",
    "url": "https://eslint.org/docs/rules/no-eq-null",
    "description": "disallow `null` comparisons without type-checking operators"
  },
  {
    "name": "no-eval",
    "url": "https://eslint.org/docs/rules/no-eval",
    "description": "disallow the use of `eval()`"
  },
  {
    "name": "no-ex-assign",
    "url": "https://eslint.org/docs/rules/no-ex-assign",
    "description": "disallow reassigning exceptions in `catch` clauses"
  },
  {
    "name": "no-extend-native",
    "url": "https://eslint.org/docs/rules/no-extend-native",
    "description": "disallow extending native types"
  },
  {
    "name": "no-extra-bind",
    "url": "https://eslint.org/docs/rules/no-extra-bind",
    "description": "disallow unnecessary calls to `.bind()`"
  },
  {
    "name": "no-extra-boolean-cast",
    "url": "https://eslint.org/docs/rules/no-extra-boolean-cast",
    "description": "disallow unnecessary boolean casts"
  },
  {
    "name": "no-extra-label",
    "url": "https://eslint.org/docs/rules/no-extra-label",
    "description": "disallow unnecessary labels"
  },
  {
    "name": "no-extra-parens",
    "url": "https://eslint.org/docs/rules/no-extra-parens",
    "description": "disallow unnecessary parentheses"
  },
  {
    "name": "no-extra-semi",
    "url": "https://eslint.org/docs/rules/no-extra-semi",
    "description": "disallow unnecessary semicolons"
  },
  {
    "name": "no-fallthrough",
    "url": "https://eslint.org/docs/rules/no-fallthrough",
    "description": "disallow fallthrough of `case` statements"
  },
  {
    "name": "no-floating-decimal",
    "url": "https://eslint.org/docs/rules/no-floating-decimal",
    "description": "disallow leading or trailing decimal points in numeric literals"
  },
  {
    "name": "no-func-assign",
    "url": "https://eslint.org/docs/rules/no-func-assign",
    "description": "disallow reassigning `function` declarations"
  },
  {
    "name": "no-global-assign",
    "url": "https://eslint.org/docs/rules/no-global-assign",
    "description": "disallow assignments to native objects or read-only global variables"
  },
  {
    "name": "no-implicit-coercion",
    "url": "https://eslint.org/docs/rules/no-implicit-coercion",
    "description": "disallow shorthand type conversions"
  },
  {
    "name": "no-implicit-globals",
    "url": "https://eslint.org/docs/rules/no-implicit-globals",
    "description": "disallow variable and `function` declarations in the global scope"
  },
  {
    "name": "no-implied-eval",
    "url": "https://eslint.org/docs/rules/no-implied-eval",
    "description": "disallow the use of `eval()`-like methods"
  },
  {
    "name": "no-inline-comments",
    "url": "https://eslint.org/docs/rules/no-inline-comments",
    "description": "disallow inline comments after code"
  },
  {
    "name": "no-inner-declarations",
    "url": "https://eslint.org/docs/rules/no-inner-declarations",
    "description": "disallow variable or `function` declarations in nested blocks"
  },
  {
    "name": "no-invalid-regexp",
    "url": "https://eslint.org/docs/rules/no-invalid-regexp",
    "description": "disallow invalid regular expression strings in `RegExp` constructors"
  },
  {
    "name": "no-invalid-this",
    "url": "https://eslint.org/docs/rules/no-invalid-this",
    "description": "disallow `this` keywords outside of classes or class-like objects"
  },
  {
    "name": "no-irregular-whitespace",
    "url": "https://eslint.org/docs/rules/no-irregular-whitespace",
    "description": "disallow irregular whitespace outside of strings and comments"
  },
  {
    "name": "no-iterator",
    "url": "https://eslint.org/docs/rules/no-iterator",
    "description": "disallow the use of the `__iterator__` property"
  },
  {
    "name": "no-label-var",
    "url": "https://eslint.org/docs/rules/no-label-var",
    "description": "disallow labels that share a name with a variable"
  },
  {
    "name": "no-labels",
    "url": "https://eslint.org/docs/rules/no-labels",
    "description": "disallow labeled statements"
  },
  {
    "name": "no-lone-blocks",
    "url": "https://eslint.org/docs/rules/no-lone-blocks",
    "description": "disallow unnecessary nested blocks"
  },
  {
    "name": "no-lonely-if",
    "url": "https://eslint.org/docs/rules/no-lonely-if",
    "description": "disallow `if` statements as the only statement in `else` blocks"
  },
  {
    "name": "no-loop-func",
    "url": "https://eslint.org/docs/rules/no-loop-func",
    "description": "disallow `function` declarations and expressions inside loop statements"
  },
  {
    "name": "no-magic-numbers",
    "url": "https://eslint.org/docs/rules/no-magic-numbers",
    "description": "disallow magic numbers"
  },
  {
    "name": "no-mixed-operators",
    "url": "https://eslint.org/docs/rules/no-mixed-operators",
    "description": "disallow mixed binary operators"
  },
  {
    "name": "no-mixed-requires",
    "url": "https://eslint.org/docs/rules/no-mixed-requires",
    "description": "disallow `require` calls to be mixed with regular variable declarations"
  },
  {
    "name": "no-mixed-spaces-and-tabs",
    "url": "https://eslint.org/docs/rules/no-mixed-spaces-and-tabs",
    "description": "disallow mixed spaces and tabs for indentation"
  },
  {
    "name": "no-multi-assign",
    "url": "https://eslint.org/docs/rules/no-multi-assign",
    "description": "disallow use of chained assignment expressions"
  },
  {
    "name": "no-multi-spaces",
    "url": "https://eslint.org/docs/rules/no-multi-spaces",
    "description": "disallow multiple spaces"
  },
  {
    "name": "no-multi-str",
    "url": "https://eslint.org/docs/rules/no-multi-str",
    "description": "disallow multiline strings"
  },
  {
    "name": "no-multiple-empty-lines",
    "url": "https://eslint.org/docs/rules/no-multiple-empty-lines",
    "description": "disallow multiple empty lines"
  },
  {
    "name": "no-native-reassign",
    "url": "https://eslint.org/docs/rules/no-native-reassign",
    "description": "disallow assignments to native objects or read-only global variables"
  },
  {
    "name": "no-negated-condition",
    "url": "https://eslint.org/docs/rules/no-negated-condition",
    "description": "disallow negated conditions"
  },
  {
    "name": "no-negated-in-lhs",
    "url": "https://eslint.org/docs/rules/no-negated-in-lhs",
    "description": "disallow negating the left operand in `in` expressions"
  },
  {
    "name": "no-nested-ternary",
    "url": "https://eslint.org/docs/rules/no-nested-ternary",
    "description": "disallow nested ternary expressions"
  },
  {
    "name": "no-new-func",
    "url": "https://eslint.org/docs/rules/no-new-func",
    "description": "disallow `new` operators with the `Function` object"
  },
  {
    "name": "no-new-object",
    "url": "https://eslint.org/docs/rules/no-new-object",
    "description": "disallow `Object` constructors"
  },
  {
    "name": "no-new-require",
    "url": "https://eslint.org/docs/rules/no-new-require",
    "description": "disallow `new` operators with calls to `require`"
  },
  {
    "name": "no-new-symbol",
    "url": "https://eslint.org/docs/rules/no-new-symbol",
    "description": "disallow `new` operators with the `Symbol` object"
  },
  {
    "name": "no-new-wrappers",
    "url": "https://eslint.org/docs/rules/no-new-wrappers",
    "description": "disallow `new` operators with the `String`, `Number`, and `Boolean` objects"
  },
  {
    "name": "no-new",
    "url": "https://eslint.org/docs/rules/no-new",
    "description": "disallow `new` operators outside of assignments or comparisons"
  },
  {
    "name": "no-obj-calls",
    "url": "https://eslint.org/docs/rules/no-obj-calls",
    "description": "disallow calling global object properties as functions"
  },
  {
    "name": "no-octal-escape",
    "url": "https://eslint.org/docs/rules/no-octal-escape",
    "description": "disallow octal escape sequences in string literals"
  },
  {
    "name": "no-octal",
    "url": "https://eslint.org/docs/rules/no-octal",
    "description": "disallow octal literals"
  },
  {
    "name": "no-param-reassign",
    "url": "https://eslint.org/docs/rules/no-param-reassign",
    "description": "disallow reassigning `function` parameters"
  },
  {
    "name": "no-path-concat",
    "url": "https://eslint.org/docs/rules/no-path-concat",
    "description": "disallow string concatenation with `__dirname` and `__filename`"
  },
  {
    "name": "no-plusplus",
    "url": "https://eslint.org/docs/rules/no-plusplus",
    "description": "disallow the unary operators `++` and `--`"
  },
  {
    "name": "no-process-env",
    "url": "https://eslint.org/docs/rules/no-process-env",
    "description": "disallow the use of `process.env`"
  },
  {
    "name": "no-process-exit",
    "url": "https://eslint.org/docs/rules/no-process-exit",
    "description": "disallow the use of `process.exit()`"
  },
  {
    "name": "no-proto",
    "url": "https://eslint.org/docs/rules/no-proto",
    "description": "disallow the use of the `__proto__` property"
  },
  {
    "name": "no-prototype-builtins",
    "url": "https://eslint.org/docs/rules/no-prototype-builtins",
    "description": "disallow calling some `Object.prototype` methods directly on objects"
  },
  {
    "name": "no-redeclare",
    "url": "https://eslint.org/docs/rules/no-redeclare",
    "description": "disallow variable redeclaration"
  },
  {
    "name": "no-regex-spaces",
    "url": "https://eslint.org/docs/rules/no-regex-spaces",
    "description": "disallow multiple spaces in regular expressions"
  },
  {
    "name": "no-restricted-globals",
    "url": "https://eslint.org/docs/rules/no-restricted-globals",
    "description": "disallow specified global variables"
  },
  {
    "name": "no-restricted-imports",
    "url": "https://eslint.org/docs/rules/no-restricted-imports",
    "description": "disallow specified modules when loaded by `import`"
  },
  {
    "name": "no-restricted-modules",
    "url": "https://eslint.org/docs/rules/no-restricted-modules",
    "description": "disallow specified modules when loaded by `require`"
  },
  {
    "name": "no-restricted-properties",
    "url": "https://eslint.org/docs/rules/no-restricted-properties",
    "description": "disallow certain properties on certain objects"
  },
  {
    "name": "no-restricted-syntax",
    "url": "https://eslint.org/docs/rules/no-restricted-syntax",
    "description": "disallow specified syntax"
  },
  {
    "name": "no-return-assign",
    "url": "https://eslint.org/docs/rules/no-return-assign",
    "description": "disallow assignment operators in `return` statements"
  },
  {
    "name": "no-return-await",
    "url": "https://eslint.org/docs/rules/no-return-await",
    "description": "disallow unnecessary `return await`"
  },
  {
    "name": "no-script-url",
    "url": "https://eslint.org/docs/rules/no-script-url",
    "description": "disallow `javascript:` urls"
  },
  {
    "name": "no-self-assign",
    "url": "https://eslint.org/docs/rules/no-self-assign",
    "description": "disallow assignments where both sides are exactly the same"
  },
  {
    "name": "no-self-compare",
    "url": "https://eslint.org/docs/rules/no-self-compare",
    "description": "disallow comparisons where both sides are exactly the same"
  },
  {
    "name": "no-sequences",
    "url": "https://eslint.org/docs/rules/no-sequences",
    "description": "disallow comma operators"
  },
  {
    "name": "no-shadow-restricted-names",
    "url": "https://eslint.org/docs/rules/no-shadow-restricted-names",
    "description": "disallow identifiers from shadowing restricted names"
  },
  {
    "name": "no-shadow",
    "url": "https://eslint.org/docs/rules/no-shadow",
    "description": "disallow variable declarations from shadowing variables declared in the outer scope"
  },
  {
    "name": "no-spaced-func",
    "url": "https://eslint.org/docs/rules/no-spaced-func",
    "description": "disallow spacing between function identifiers and their applications (deprecated)"
  },
  {
    "name": "no-sparse-arrays",
    "url": "https://eslint.org/docs/rules/no-sparse-arrays",
    "description": "disallow sparse arrays"
  },
  {
    "name": "no-sync",
    "url": "https://eslint.org/docs/rules/no-sync",
    "description": "disallow synchronous methods"
  },
  {
    "name": "no-tabs",
    "url": "https://eslint.org/docs/rules/no-tabs",
    "description": "disallow all tabs"
  },
  {
    "name": "no-template-curly-in-string",
    "url": "https://eslint.org/docs/rules/no-template-curly-in-string",
    "description": "disallow template literal placeholder syntax in regular strings"
  },
  {
    "name": "no-ternary",
    "url": "https://eslint.org/docs/rules/no-ternary",
    "description": "disallow ternary operators"
  },
  {
    "name": "no-this-before-super",
    "url": "https://eslint.org/docs/rules/no-this-before-super",
    "description": "disallow `this`/`super` before calling `super()` in constructors"
  },
  {
    "name": "no-throw-literal",
    "url": "https://eslint.org/docs/rules/no-throw-literal",
    "description": "disallow throwing literals as exceptions"
  },
  {
    "name": "no-trailing-spaces",
    "url": "https://eslint.org/docs/rules/no-trailing-spaces",
    "description": "disallow trailing whitespace at the end of lines"
  },
  {
    "name": "no-undef-init",
    "url": "https://eslint.org/docs/rules/no-undef-init",
    "description": "disallow initializing variables to `undefined`"
  },
  {
    "name": "no-undef",
    "url": "https://eslint.org/docs/rules/no-undef",
    "description": "disallow the use of undeclared variables unless mentioned in `/*global */` comments"
  },
  {
    "name": "no-undefined",
    "url": "https://eslint.org/docs/rules/no-undefined",
    "description": "disallow the use of `undefined` as an identifier"
  },
  {
    "name": "no-underscore-dangle",
    "url": "https://eslint.org/docs/rules/no-underscore-dangle",
    "description": "disallow dangling underscores in identifiers"
  },
  {
    "name": "no-unexpected-multiline",
    "url": "https://eslint.org/docs/rules/no-unexpected-multiline",
    "description": "disallow confusing multiline expressions"
  },
  {
    "name": "no-unmodified-loop-condition",
    "url": "https://eslint.org/docs/rules/no-unmodified-loop-condition",
    "description": "disallow unmodified loop conditions"
  },
  {
    "name": "no-unneeded-ternary",
    "url": "https://eslint.org/docs/rules/no-unneeded-ternary",
    "description": "disallow ternary operators when simpler alternatives exist"
  },
  {
    "name": "no-unreachable",
    "url": "https://eslint.org/docs/rules/no-unreachable",
    "description": "disallow unreachable code after `return`, `throw`, `continue`, and `break` statements"
  },
  {
    "name": "no-unsafe-finally",
    "url": "https://eslint.org/docs/rules/no-unsafe-finally",
    "description": "disallow control flow statements in `finally` blocks"
  },
  {
    "name": "no-unsafe-negation",
    "url": "https://eslint.org/docs/rules/no-unsafe-negation",
    "description": "disallow negating the left operand of relational operators"
  },
  {
    "name": "no-unused-expressions",
    "url": "https://eslint.org/docs/rules/no-unused-expressions",
    "description": "disallow unused expressions"
  },
  {
    "name": "no-unused-labels",
    "url": "https://eslint.org/docs/rules/no-unused-labels",
    "description": "disallow unused labels"
  },
  {
    "name": "no-unused-vars",
    "url": "https://eslint.org/docs/rules/no-unused-vars",
    "description": "disallow unused variables"
  },
  {
    "name": "no-use-before-define",
    "url": "https://eslint.org/docs/rules/no-use-before-define",
    "description": "disallow the use of variables before they are defined"
  },
  {
    "name": "no-useless-call",
    "url": "https://eslint.org/docs/rules/no-useless-call",
    "description": "disallow unnecessary calls to `.call()` and `.apply()`"
  },
  {
    "name": "no-useless-computed-key",
    "url": "https://eslint.org/docs/rules/no-useless-computed-key",
    "description": "disallow unnecessary computed property keys in object literals"
  },
  {
    "name": "no-useless-concat",
    "url": "https://eslint.org/docs/rules/no-useless-concat",
    "description": "disallow unnecessary concatenation of literals or template literals"
  },
  {
    "name": "no-useless-constructor",
    "url": "https://eslint.org/docs/rules/no-useless-constructor",
    "description": "disallow unnecessary constructors"
  },
  {
    "name": "no-useless-escape",
    "url": "https://eslint.org/docs/rules/no-useless-escape",
    "description": "disallow unnecessary escape characters"
  },
  {
    "name": "no-useless-rename",
    "url": "https://eslint.org/docs/rules/no-useless-rename",
    "description": "disallow renaming import, export, and destructured assignments to the same name"
  },
  {
    "name": "no-useless-return",
    "url": "https://eslint.org/docs/rules/no-useless-return",
    "description": "disallow redundant return statements"
  },
  {
    "name": "no-var",
    "url": "https://eslint.org/docs/rules/no-var",
    "description": "require `let` or `const` instead of `var`"
  },
  {
    "name": "no-void",
    "url": "https://eslint.org/docs/rules/no-void",
    "description": "disallow `void` operators"
  },
  {
    "name": "no-warning-comments",
    "url": "https://eslint.org/docs/rules/no-warning-comments",
    "description": "disallow specified warning terms in comments"
  },
  {
    "name": "no-whitespace-before-property",
    "url": "https://eslint.org/docs/rules/no-whitespace-before-property",
    "description": "disallow whitespace before properties"
  },
  {
    "name": "no-with",
    "url": "https://eslint.org/docs/rules/no-with",
    "description": "disallow `with` statements"
  },
  {
    "name": "nonblock-statement-body-position",
    "url": "https://eslint.org/docs/rules/nonblock-statement-body-position",
    "description": "enforce the location of single-line statements"
  },
  {
    "name": "object-curly-newline",
    "url": "https://eslint.org/docs/rules/object-curly-newline",
    "description": "enforce consistent line breaks inside braces"
  },
  {
    "name": "object-curly-spacing",
    "url": "https://eslint.org/docs/rules/object-curly-spacing",
    "description": "enforce consistent spacing inside braces"
  },
  {
    "name": "object-property-newline",
    "url": "https://eslint.org/docs/rules/object-property-newline",
    "description": "enforce placing object properties on separate lines"
  },
  {
    "name": "object-shorthand",
    "url": "https://eslint.org/docs/rules/object-shorthand",
    "description": "require or disallow method and property shorthand syntax for object literals"
  },
  {
    "name": "one-var-declaration-per-line",
    "url": "https://eslint.org/docs/rules/one-var-declaration-per-line",
    "description": "require or disallow newlines around variable declarations"
  },
  {
    "name": "one-var",
    "url": "https://eslint.org/docs/rules/one-var",
    "description": "enforce variables to be declared either together or separately in functions"
  },
  {
    "name": "operator-assignment",
    "url": "https://eslint.org/docs/rules/operator-assignment",
    "description": "require or disallow assignment operator shorthand where possible"
  },
  {
    "name": "operator-linebreak",
    "url": "https://eslint.org/docs/rules/operator-linebreak",
    "description": "enforce consistent linebreak style for operators"
  },
  {
    "name": "padded-blocks",
    "url": "https://eslint.org/docs/rules/padded-blocks",
    "description": "require or disallow padding within blocks"
  },
  {
    "name": "padding-line-between-statements",
    "url": "https://eslint.org/docs/rules/padding-line-between-statements",
    "description": "require or disallow padding lines between statements"
  },
  {
    "name": "prefer-arrow-callback",
    "url": "https://eslint.org/docs/rules/prefer-arrow-callback",
    "description": "require using arrow functions for callbacks"
  },
  {
    "name": "prefer-const",
    "url": "https://eslint.org/docs/rules/prefer-const",
    "description": "require `const` declarations for variables that are never reassigned after declared"
  },
  {
    "name": "prefer-destructuring",
    "url": "https://eslint.org/docs/rules/prefer-destructuring",
    "description": "require destructuring from arrays and/or objects"
  },
  {
    "name": "prefer-numeric-literals",
    "url": "https://eslint.org/docs/rules/prefer-numeric-literals",
    "description": "disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals"
  },
  {
    "name": "prefer-promise-reject-errors",
    "url": "https://eslint.org/docs/rules/prefer-promise-reject-errors",
    "description": "require using Error objects as Promise rejection reasons"
  },
  {
    "name": "prefer-reflect",
    "url": "https://eslint.org/docs/rules/prefer-reflect",
    "description": "require `Reflect` methods where applicable"
  },
  {
    "name": "prefer-rest-params",
    "url": "https://eslint.org/docs/rules/prefer-rest-params",
    "description": "require rest parameters instead of `arguments`"
  },
  {
    "name": "prefer-spread",
    "url": "https://eslint.org/docs/rules/prefer-spread",
    "description": "require spread operators instead of `.apply()`"
  },
  {
    "name": "prefer-template",
    "url": "https://eslint.org/docs/rules/prefer-template",
    "description": "require template literals instead of string concatenation"
  },
  {
    "name": "quote-props",
    "url": "https://eslint.org/docs/rules/quote-props",
    "description": "require quotes around object literal property names"
  },
  {
    "name": "quotes",
    "url": "https://eslint.org/docs/rules/quotes",
    "description": "enforce the consistent use of either backticks, double, or single quotes"
  },
  {
    "name": "radix",
    "url": "https://eslint.org/docs/rules/radix",
    "description": "enforce the consistent use of the radix argument when using `parseInt()`"
  },
  {
    "name": "require-await",
    "url": "https://eslint.org/docs/rules/require-await",
    "description": "disallow async functions which have no `await` expression"
  },
  {
    "name": "require-jsdoc",
    "url": "https://eslint.org/docs/rules/require-jsdoc",
    "description": "require JSDoc comments"
  },
  {
    "name": "require-yield",
    "url": "https://eslint.org/docs/rules/require-yield",
    "description": "require generator functions to contain `yield`"
  },
  {
    "name": "rest-spread-spacing",
    "url": "https://eslint.org/docs/rules/rest-spread-spacing",
    "description": "enforce spacing between rest and spread operators and their expressions"
  },
  {
    "name": "semi-spacing",
    "url": "https://eslint.org/docs/rules/semi-spacing",
    "description": "enforce consistent spacing before and after semicolons"
  },
  {
    "name": "semi-style",
    "url": "https://eslint.org/docs/rules/semi-style",
    "description": "enforce location of semicolons"
  },
  {
    "name": "semi",
    "url": "https://eslint.org/docs/rules/semi",
    "description": "require or disallow semicolons instead of ASI"
  },
  {
    "name": "sort-imports",
    "url": "https://eslint.org/docs/rules/sort-imports",
    "description": "enforce sorted import declarations within modules"
  },
  {
    "name": "sort-keys",
    "url": "https://eslint.org/docs/rules/sort-keys",
    "description": "require object keys to be sorted"
  },
  {
    "name": "sort-vars",
    "url": "https://eslint.org/docs/rules/sort-vars",
    "description": "require variables within the same declaration block to be sorted"
  },
  {
    "name": "space-before-blocks",
    "url": "https://eslint.org/docs/rules/space-before-blocks",
    "description": "enforce consistent spacing before blocks"
  },
  {
    "name": "space-before-function-paren",
    "url": "https://eslint.org/docs/rules/space-before-function-paren",
    "description": "enforce consistent spacing before `function` definition opening parenthesis"
  },
  {
    "name": "space-in-parens",
    "url": "https://eslint.org/docs/rules/space-in-parens",
    "description": "enforce consistent spacing inside parentheses"
  },
  {
    "name": "space-infix-ops",
    "url": "https://eslint.org/docs/rules/space-infix-ops",
    "description": "require spacing around infix operators"
  },
  {
    "name": "space-unary-ops",
    "url": "https://eslint.org/docs/rules/space-unary-ops",
    "description": "enforce consistent spacing before or after unary operators"
  },
  {
    "name": "spaced-comment",
    "url": "https://eslint.org/docs/rules/spaced-comment",
    "description": "enforce consistent spacing after the `//` or `/*` in a comment"
  },
  {
    "name": "strict",
    "url": "https://eslint.org/docs/rules/strict",
    "description": "require or disallow strict mode directives"
  },
  {
    "name": "switch-colon-spacing",
    "url": "https://eslint.org/docs/rules/switch-colon-spacing",
    "description": "enforce spacing around colons of switch statements"
  },
  {
    "name": "symbol-description",
    "url": "https://eslint.org/docs/rules/symbol-description",
    "description": "require symbol descriptions"
  },
  {
    "name": "template-curly-spacing",
    "url": "https://eslint.org/docs/rules/template-curly-spacing",
    "description": "require or disallow spacing around embedded expressions of template strings"
  },
  {
    "name": "template-tag-spacing",
    "url": "https://eslint.org/docs/rules/template-tag-spacing",
    "description": "require or disallow spacing between template tags and their literals"
  },
  {
    "name": "unicode-bom",
    "url": "https://eslint.org/docs/rules/unicode-bom",
    "description": "require or disallow Unicode byte order mark (BOM)"
  },
  {
    "name": "use-isnan",
    "url": "https://eslint.org/docs/rules/use-isnan",
    "description": "require calls to `isNaN()` when checking for `NaN`"
  },
  {
    "name": "valid-jsdoc",
    "url": "https://eslint.org/docs/rules/valid-jsdoc",
    "description": "enforce valid JSDoc comments"
  },
  {
    "name": "valid-typeof",
    "url": "https://eslint.org/docs/rules/valid-typeof",
    "description": "enforce comparing `typeof` expressions against valid strings"
  },
  {
    "name": "vars-on-top",
    "url": "https://eslint.org/docs/rules/vars-on-top",
    "description": "require `var` declarations be placed at the top of their containing scope"
  },
  {
    "name": "wrap-iife",
    "url": "https://eslint.org/docs/rules/wrap-iife",
    "description": "require parentheses around immediate `function` invocations"
  },
  {
    "name": "wrap-regex",
    "url": "https://eslint.org/docs/rules/wrap-regex",
    "description": "require parenthesis around regex literals"
  },
  {
    "name": "yield-star-spacing",
    "url": "https://eslint.org/docs/rules/yield-star-spacing",
    "description": "require or disallow spacing around the `*` in `yield*` expressions"
  },
  {
    "name": "yoda",
    "url": "https://eslint.org/docs/rules/yoda",
    "description": "require or disallow \"Yoda\" conditions"
  }
]
